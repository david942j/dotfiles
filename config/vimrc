" Plugins {{{
" Use vim-plug to manage.
call plug#begin('~/.vim/plugged')

" File navigation {{{
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
" }}}

" Syntax highlight {{{
Plug 'sheerun/vim-polyglot'
" }}}

" Indent line {{{
Plug 'Yggdroot/indentLine'
" }}}

" Fast comment {{{
Plug 'scrooloose/nerdcommenter'
" }}}

" Color theme {{{
Plug 'david942j/ayu-vim'
" }}}

" Status line {{{
Plug 'itchyny/lightline.vim'
" }}}

call plug#end()
" }}}

set spell spelllang=en_us
set nu
set rnu
set mouse=a
syntax on
set ts=2
set softtabstop=2
set expandtab
set shiftwidth=2
au FileType Makefile set noexpandtab
au BufNewFile *.rb 0r ~/.defaults/default.rb
au BufNewFile *.py 0r ~/.defaults/default.py
au BufNewFile *.cpp 0r ~/.defaults/default.cpp
set ruler
set backspace=2
set ic
set ru
set hlsearch
set incsearch
set cursorline
set smartcase
set foldmethod=marker
colorscheme ron
set t_Co=256
set autoread
set showmatch
set showmode
set nobackup
autocmd FileType c,cpp,cc  set cindent comments=sr:/*,mb:*,el:*/,:// cino=>s,e0,n0,f0,{0,}0,^-1s,:0,=s,g0,h1s,p2,t0,+2,(2,)20,*30


" Colors {{{
highlight Folded ctermfg=243 ctermbg=234 guifg=Cyan guibg=DarkGrey
highlight FoldColumn ctermbg=234 guifg=Cyan guibg=Grey
" Custom auto-complete menu colors
highlight PmenuSel ctermfg=white ctermbg=20
highlight Pmenu ctermfg=252 ctermbg=17
highlight Normal ctermbg=none
highlight ColorColumn ctermbg=53
" }}}

" Status line {{{
set laststatus=2
" }}}

" Custom keybinding {{{
" Space as leader key.
let mapleader="\<Space>"
let maplocalleader="\<Space>"

" Use F2 to toggle paste/no paste mode
set pastetoggle=<F2>
nnoremap <F2> :set paste!<BAR>set paste?<CR>

vmap <Tab> >
vmap <S-Tab> <

nmap <Tab> gt
nmap <S-Tab> gT

" One less shift!
vnoremap ; :
nnoremap ; :

" 0 is sooo much easier to type than ^, and ^ is more useful.
nnoremap 0 ^
nnoremap ^ 0
vnoremap 0 ^
vnoremap ^ 0

inoremap <C-e> <End>
nnoremap <C-e> <End>

inoremap jk <esc>

" open new file
nnoremap <C-n> :tabe<CR>

" Don't show me that stupid window :D
nnoremap q: :q

" Folds
nnoremap <CR> za

" To avoid C-a collision with tmux.
nnoremap + <C-a>
nnoremap - <C-x>

" Quick save/load/quit
nnoremap <Leader>w :w<CR>
nnoremap <Leader>e :e<CR>
nnoremap <Leader>q :q<CR>
map <Leader>m <ESC>:exec &mouse!=""? "set mouse=" : "set mouse=a"<BAR>set mouse?<CR>

" Reindent all code, while preserving cursor location
nnoremap <Leader>= mqHmwgg=G`wzt`q
" }}}


" Settings for plugins {{{

" fzf {{{
let g:fzf_command_prefix = 'FZF'
" Mappings {{{

nnoremap <C-f> :tabe<CR>:FZF<CR>
nnoremap <C-g> :tabe<CR>:FZFGFiles<CR>
nnoremap <Leader>g :FZFAg<CR>
" }}}
" }}}

" vim-polyglot {{{
let g:vim_markdown_conceal = 0
let g:polyglot_disabled = ['python']
" }}}

" indentLine {{{
let g:indentLine_char = '|'
let g:indentLine_fileTypeExclude = ['tex']
" }}}

" NERDCommenter {{{
" Settings {{{
let g:NERDSpaceDelims=1
let g:NERDDefaultAlign='left'
" }}}
" Mappings {{{
nmap \ <Leader>c<Space>
vmap \ <Leader>c<Space>
" }}}
" }}}

" ayu-vim {{{
try
  colorscheme ayu
  set termguicolors
  let ayucolor="dark"   " for dark version of theme
catch /^Vim\%((\a\+)\)\=:E185/
endtry
" }}}
" {{{ lightline
set noshowmode " no need showmode!
 let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ 'component_function': {
      \   'filename': 'LightLineFilename',
      \ },
      \ }
 function! LightLineFilename()
   return expand('%:~:.') !=# '' ? expand('%:~:.') : '[No Name]'
 endfunction
" }}}

" }}}
